// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  utput    = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  summaries Summary[] // User has many summaries
}

model Exchange {
  id        String    @id @default(uuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  summaries Summary[] // One exchange can have many summaries (one per user)
}

model Message {
  id         String   @id @default(uuid())
  text       String
  speaker    String
  speakerId  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  exchange   Exchange @relation(fields: [exchangeId], references: [id])
  exchangeId String
}

model Summary {
  id        String   @id @default(uuid())
  content   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  exchange   Exchange @relation(fields: [exchangeId], references: [id])
  exchangeId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  // Make sure each user can have only one summary per exchange
  @@unique([userId, exchangeId])
}
